#!/bin/bash
# ==============================================================================
# Rocky Linux 9 Unattended ISO Builder (v2.0)
#
# Author: RHEL/Rocky Linux Engineering Discipline (Modified for Standard Automation)
#
# Description:
# This script uses the official 'mkksiso' utility to build an automated
# Rocky Linux 9 installer. It embeds a Kickstart file that creates a
# default server installation with a predefined administrative user.
#
# Changes from ArttulOS script:
#   - Removed all "ArttulOS" branding (wallpapers, Plymouth, GRUB, os-release).
#   - Removed the requirement for a local web server and custom kernel packages.
#   - Simplified the Kickstart file to a standard server installation.
#   - Post-install script focuses only on user creation and basic SSH hardening.
# ==============================================================================

set -e -o pipefail

# --- Configuration Section ---
readonly FINAL_ISO_NAME="Rocky-9-Unattended-Server.iso"
readonly KS_FILENAME="rocky9-unattended.ks"

# Kickstart User and System Configuration
readonly KS_LANG="en_US.UTF-8"
readonly KS_TIMEZONE="America/Los_Angeles"
readonly KS_USER="arttulos"
readonly KS_PASS="arttulos"
readonly KS_HOSTNAME="rocky9-ks.localdomain"

# --- Helper Functions ---
print_msg() {
    local color=$1; local message=$2; local nocolor='\033[0m'
    case "$color" in
        "green")  echo -e "\n\033[1;32m[SUCCESS]\033[0m ${message}${nocolor}" ;;
        "blue")   echo -e "\n\033[1;34m[INFO]\033[0m ${message}${nocolor}" ;;
        "red")    echo -e "\n\033[1;31m[ERROR]\033[0m ${message}${nocolor}" >&2 ;;
    esac
}

# --- Main Functions ---

check_prerequisites() {
    print_msg "blue" "Verifying prerequisites..."
    if [[ "$EUID" -ne 0 ]]; then
        print_msg "red" "This script must be run as root. Please use sudo."
        exit 1
    fi
    if ! command -v mkksiso &> /dev/null; then
        print_msg "red" "'mkksiso' not found. Please run: sudo dnf install pykickstart"
        exit 1
    fi
    print_msg "green" "All prerequisites are met."
}

cleanup() {
    print_msg "blue" "Cleaning up temporary Kickstart file..."
    rm -f "${KS_FILENAME}"
}

generate_kickstart() {
    print_msg "blue" "Generating Kickstart file: ${KS_FILENAME}"

    # The Kickstart configuration is generated here.
    cat << EOF > "${KS_FILENAME}"
# Kickstart for Rocky Linux 9 - Generated by ISO Builder v2.0
# Installation will be fully automated.

# --- System Locale and Install Mode ---
# Use text mode for a faster, non-interactive server installation.
# Change to 'graphical' for a desktop environment.
text
eula --agreed
reboot

lang ${KS_LANG}
keyboard --vckeymap=us --xlayouts='us'
timezone ${KS_TIMEZONE} --isUtc

# --- Installation Source ---
# Use the booted installation media as the primary source.
cdrom

# --- Network & Firewall ---
network --bootproto=dhcp --device=link --activate --hostname=${KS_HOSTNAME}
firewall --enabled --service=ssh

# --- Partitioning ---
# Erase the disk and create a standard LVM layout automatically.
zerombr
clearpart --all --initlabel
autopart --type=lvm
bootloader --location=mbr

# --- Authentication & User Setup (Enterprise Style) ---
# Lock the root account for security. All administration should be done via sudo.
rootpw --lock
# Create the primary administrative user and add them to the 'wheel' group for sudo access.
user --name=${KS_USER} --groups=wheel --password=${KS_PASS} --plaintext

# --- Security ---
selinux --enforcing

# --- Package Selection ---
%packages --excludedocs --instLangs=en_US
# Install the 'Server' environment profile for a standard server setup.
@server-product-environment

# Essential command-line tools
vim-enhanced
wget
curl
git
bash-completion
kexec-tools
policycoreutils-python-utils
%end

# --- Post-Installation Script ---
%post --log=/root/ks-post.log --erroronfail
echo "--- Starting Rocky 9 Post-Installation Script ---"

# 1. Configure Sudoers
# Allow users in the 'wheel' group to execute any command with sudo.
# This is a standard and secure default.
echo "Configuring sudo for the 'wheel' group..."
echo "%wheel ALL=(ALL) ALL" > /etc/sudoers.d/wheel

# 2. Harden SSH
# Explicitly disable root login via SSH as a security best practice.
echo "Hardening SSH: Disabling root login..."
sed -i 's/^#?PermitRootLogin.*/PermitRootLogin no/' /etc/ssh/sshd_config

# 3. Set Welcome Message (MOTD)
# Remind the user to change the default passwords upon first login.
echo "Setting the Message of the Day (MOTD)..."
cat << MOTD_EOF > /etc/motd

  Welcome to your new Rocky Linux 9 automated installation.

  Default User: ${KS_USER}
  Default Pass: ${KS_PASS} (for user and root)

  SECURITY WARNING:
  Your system was installed with an insecure default password.
  Please change it immediately.
  - To change your user password, run: passwd
  - To set a new root password, run: sudo passwd root

MOTD_EOF

echo "--- Post-installation script finished successfully. ---"
%end
EOF
    print_msg "green" "Kickstart file generated successfully."
}

build_installer_iso() {
    local base_iso_path
    echo ""
    read -p "Please enter the full path to the BASE Rocky Linux 9 INSTALLER ISO: " base_iso_path

    if [ ! -f "$base_iso_path" ]; then
        print_msg "red" "Source ISO file not found at '${base_iso_path}'. Aborting."
        exit 1
    fi

    print_msg "blue" "Starting ISO build with mkksiso. This will embed the Kickstart file."
    mkksiso --ks "${KS_FILENAME}" "${base_iso_path}" "${FINAL_ISO_NAME}"

    print_msg "green" "Build complete!"
    echo -e "Your new unattended installer ISO is located at: \033[1m${PWD}/${FINAL_ISO_NAME}\033[0m"
}

# --- Main Execution ---
main() {
    trap cleanup EXIT SIGHUP SIGINT SIGTERM
    check_prerequisites
    generate_kickstart
    build_installer_iso
}

main "$@"